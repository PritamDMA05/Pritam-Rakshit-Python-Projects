# -*- coding: utf-8 -*-
"""Advance Python  Project 102

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/18LlsQNDggBLwUVVKRzavTyMcTlWWiDx7
"""

import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns
a=pd.read_csv("/content/housing+(1).csv")
a.head()

"""1.	What is the average median income of the data set and check the distribution of data using appropriate plots. Please explain the distribution of the plot."""

b=a['median_income'].mean() #finding the mean value
print("the average median income is {}".format(b))
#plt.title("Distribution of Data") #title of the graph
#plt.hist(a['median_income'],bins=50, color="blue") #ploting histogram to get the distribution of the data
#plt.xlabel('Median Income') # x-axis labeling
#plt.ylabel('Frequency') # y-axis labeling
#plt.show()

# The plot indicates the data is right skewed data that means more number of people are closer to the average income.

sns.boxplot(a['median_income'])
#getting the distribution of the data

"""2 Draw an appropriate plot to see the distribution of housing_median_age and explain your observations."""

plt.hist(a["housing_median_age"],edgecolor = 'yellow', facecolor='black',bins=10)#ploting histogram to get the distribution of the data
plt.title("Distribution of Housing_Median_Age") #title of the graph
plt.xlabel("Housing Median Age") # x-axis labeling
plt.ylabel("Frequency") # y-axis labeling
plt.show()

#b=a['housing_median_age'].mean()
#print(b)

# the average age is around 15-35 and its more often symetrical data

"""Q3 Show with the help of visualization, how median_income and median_house_values are related?"""

plt.scatter(a['median_income'],a['median_house_value'], marker='H',edgecolors="darkblue",facecolor = 'red', s = 20)#ploting scatter  to get the relation of the data
plt.xlabel('MI') # x-axis labeling
plt.ylabel('MHV') # y-axis labeling
plt.title('Relationship between  median_income and median_house_values')  #title of the graph
plt.show()

# It shows positive correlation as when the median income increases median house values has also increased

"""Q4 Create a data set by deleting the corresponding examples from the data set for which total_bedrooms are not available."""

b=a.dropna(subset=["total_bedrooms"]) #dropna helps to drop null attributes
#print(b)

b.to_csv("cleaned_data.csv", index=False) #creating another dataset

"""Q5 Create a data set by filling the missing data with the mean value of the total_bedrooms in the original data set

"""

c=a["total_bedrooms"].mean() #to find the mean of the total bedrooms
print(c)

d=a["total_bedrooms"].fillna(c) #fillinf the null attributes with the mean
print(d)

"""Q6 Write a programming construct (create a user defined function) to calculate the median value of the data set wherever required."""

def calc_median(x): #defining a function
    b=sorted(x) #sorting the dataset
    n = len(b) #calculating the length
    if n%2==1: # checking it is odd
      median=b[n//2] #if it is of=dd then gettinf the float value of the length
    else:
      md1= n//2 #getting the float value dividing by 2 if it is even
      md2= md1-1 #getting one value less then the previous onnes
      median=(b[md1]+b[md2]) / 2 # calculating the median
    return median
c={"pritam":[10,20,30,25,16,25]}
e=pd.DataFrame(c)
print(e)
g=calc_median(e["pritam"])
print(g)

"""7 Plot latitude versus longitude and explain your observations."""

plt.scatter(a["latitude"],a["longitude"], marker='H',edgecolors="blue",facecolor = 'red', s = 15)
plt.xlabel("latitude")
plt.ylabel("longitude")
plt.title("latitude versus longitude")
plt.show()

#most of the location a are located near the point of +39(latitude) & -122(longitude),
#if we consider density of the markers in the graph of the latitude and the longitude which in turn is,
#probabley around the  western coast of North America

"""8 Create a data set for which the ocean_proximity is ‘Near ocean’.

"""

b=a.loc[a["ocean_proximity"].str.contains("NEAR OCEAN")] #filtering  the rows which contains near ocean in it
b.head()
c=b.to_csv("Near_Ocean_only.csv", index=False) #creating another dataset

""" Q9 Find the mean and median of the median income for the data set created in

"""

a=pd.read_csv('/content/Near_Ocean_only.csv')
a.head()
b=a["median_income"].mean() #finding the mean
c=a['median_income'].median() #finding the median
print("The mean of the median income is {} and the median is {}".format(c,b))

"""Q10 Please create a new column named total_bedroom_size. If the total bedrooms is 10 or less, it should be quoted as small. If the total bedrooms is 11 or more but less than 1000, it should be medium, otherwise it should be considered large."""

a.loc[a["total_bedrooms"]<=10,"total_bedroom_size"]="small" #filtering the data on conditional vlues and giving the colum new name
a.loc[(a["total_bedrooms"]>11) & (a["total_bedrooms"]<1000), "total_bedroom_size"]="medium" #
a.loc[a["total_bedrooms"]>=1000,"total_bedroom_size"]="large"
a.head()

a=np.array([1,2,3,4])
b=pd.array( [1, 2 ,3])
b